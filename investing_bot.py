import os
import asyncio
import feedparser
from telegram import Bot
from http.server import BaseHTTPRequestHandler, HTTPServer
import threading

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
RSS_URL = "https://ru.investing.com/rss/news_25.rss"
CHECK_INTERVAL = 60  # —Å–µ–∫—É–Ω–¥

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
THREAD_ID = os.getenv("MESSAGE_THREAD_ID")  # –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º

bot = Bot(token=BOT_TOKEN)
last_link = None
first_run = True

# === –û—á–∏—Å—Ç–∫–∞ —Å—Å—ã–ª–æ–∫
def normalize_link(link):
    return link.split('?')[0].rstrip('/')

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async def send_news(entries):
    global last_link, first_run

    entries = list(reversed(entries))

    for entry in entries:
        title = entry.get("title")
        link = entry.get("link")

        if not link:
            continue

        clean_link = normalize_link(link)

        if clean_link == last_link:
            continue

        msg = f"üì∞ <b>{title}</b>\n{link}"
        try:
            await bot.send_message(
                chat_id=CHAT_ID,
                text=msg,
                parse_mode="HTML",
                message_thread_id=int(THREAD_ID) if THREAD_ID else None
            )
            last_link = clean_link
            await asyncio.sleep(1)
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", e)

        if first_run:
            break

    first_run = False

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
async def main():
    try:
        await bot.send_message(
            chat_id=CHAT_ID,
            text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ Investing.com (Forex)",
            parse_mode="HTML",
            message_thread_id=int(THREAD_ID) if THREAD_ID else None
        )
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", e)

    while True:
        try:
            print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–µ–Ω—Ç—ã...")
            feed = feedparser.parse(RSS_URL)
            await send_news(feed.entries)
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ RSS:", e)
        await asyncio.sleep(CHECK_INTERVAL)

# === HTTP –¥–ª—è Render
class DummyHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b"Bot is running.")

def run_http_server():
    server = HTTPServer(('0.0.0.0', 10000), DummyHandler)
    print("üåê HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 10000")
    server.serve_forever()

# === –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    threading.Thread(target=run_http_server, daemon=True).start()
    asyncio.run(main())
